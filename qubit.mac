/* internal starts */
/* Do not use KET directly, use Ket and Bra. */
kill(KET)$
/* {X|Y|Z}BASIS defined in quantum.mac */
KET["+"] : XBASIS[1]$
KET["-"] : XBASIS[2]$
KET[">"] : YBASIS[1]$
KET["<"] : YBASIS[2]$
KET["0"] : ZBASIS[1]$
KET["1"] : ZBASIS[2]$
KET[otherwise] := error("no ket for", otherwise, "only +-><01 are accepted");
/* internal ends */

/* We can get a quantum state by calling Ket[state]
   where state is amongst
   Ket["+"] := |x, +}
   Ket["-"] := |x, -}
   Ket[">"] := |y, +}
   Ket["<"] := |y, -}
   Ket["0"] := |z, +}
   Ket["1"] := |z, -}
   Diad["+-"] := |x, +}{x, -|
   Notice one can also create things like
   Diad["+0"], which makes little sense */

kill(Ket)$
kill(Bra)$
kill(Diad)$
Ket[state] := KET[state]$
Bra[state] := dagger(KET[state])$
Diad[pair] := block(
    local(list),
    list: charlist(pair),
    Ket[list[1]] . Bra[list[2]]
)$

/* vim: set ft=maxima ts=4 et: */
